name: Package

on:
  pull_request:
    branches: main
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  poetry:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment-poetry.yml') }}

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          environment-file: environment-poetry.yml
          activate-environment: dinosar-dev
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Setup Poetry Virtualenv Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry config --list
          poetry install

      - name: Code Quality
        run: poetry run black . --check

      - name: Test with Pytest
        run: poetry run pytest -o markers=network -m "not network" --cov=dinosar --cov-report=xml

      - name: Upload CodeCov Report for Badge
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

      - name: Build Package with Poetry
        run: poetry build

      - name: Push package to PyPi
        if: startswith(github.ref, 'refs/tags')
        run: |
          poetry publish -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASS }}
